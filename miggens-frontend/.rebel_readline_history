1589752826944:(defn parse-paragraph-links\n  ""\n  [dirty-paragraph]\n  (let [matches (re-seq #"^.*<.+>.*" dirty-paragraph)]\n    matches))
1589752862064:(parse-paragraph-links "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753053439:(re-find #"^.*(<.+>).*$" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753545568:(re-find #"^.*(<.+>)+.*$" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753646701:(.matchAll "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs." /(<.+>)/gi)
1589753656003:(.matchAll "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs." /(<.+>)/)
1589753664199:(.matchAll "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs." "/(<.+>)/")
1589753693519:(doc .matchAll)
1589753709628:String.matchAll
1589753765928:(re-find #"^.*\\s*(<.+>)+\\s*.*$" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753821936:(re-find #"^.*\\s*(<.+>)+\\s*.*" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753885017:(re-find #"^.*\\s*(<.+>)\\s*(.*)" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753917274:(re-find #".*\\s*(<.+>)\\s*(.*)" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753961095:(re-match\n #".*\\s*(<.+>)\\s*(.*)" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753974794:(re-match #".*\\s*(<.+>)\\s*(.*)" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589753999890:(re-matches #".*\\s*(<.+>)\\s*(.*)" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754060669:(re-matches #"\\s*(<.+>)\\s*(.*)" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754083001:(re-find #"\\s*(<.+>)\\s*(.*)" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754145945:(re-seq #"\\s*(<.+>)\\s*" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754232422:(re-find #"\\s*(<.+>)\\s*" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754269825:(count (re-find #"\\s*(<.+>)\\s*" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs."))
1589754281991:(last (re-find #"\\s*(<.+>)\\s*" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs."))
1589754458615:(re-find #"\\s*(<.+>)\\s*" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754531633:(re-matches #"\\s*(<.+>)\\s*" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754660781:(re-matches #"\\s*(.+)\\s*<" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754677022:(re-find #"\\s*(.+)\\s*<" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754825920:(:require [clojure.string :as cstr])
1589754858201:(require clojure.string)
1589754871494:(require "clojure.string")
1589754886096:(require 'clojure.string)
1589754919124:(replace #" " "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754939878:(replace #"\\s+" "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589754982976:(replace " " "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs.")
1589755029041:(replace "In brief, this site is composed of the frontend you’re presently viewing. While it is a single page application and reactive, it’s not <LINK:React:https://reactjs.org/> proper. Although I have built a proper React frontend I claim not expertise or speciality; that may change overtime given the technologies popularity and demand. I constructed this frontend from a technology built on top of both javascript and React. In expanding my horizons as a dev I ventured into the world of functional programming and found a JVM technology called <LINK:Clojure:https://clojure.org/> that provided the declarative paradigm coupled with Java interoperability. I quickly fell in love with this tech and began revisiting general problem solving from an entirely different angle, while sneaking some Java when convenient. Not in every case, but most I found I was able to solve problems in far less time and less code. Unfortunately my day job didn’t foster venturing far from the industry standards and so this fell by the wayside. But having learned Clojure I also became aware <LINK:Clojurescript:https://clojurescript.org/>, it’s Clojure implemented in Javascript. Given the rapid development accompanied with Clojure and the satisfaction of witnessing a frontend grow I could not resist dabbling. Soon I became aware of a Clojurescript project called <LINK:Reframe:https://github.com/day8/re-frame> built on top of React. The styles utilized here are from <LINK:Bulma:https://bulma.io/>, I found this a lightweight, simple and attractive solution for my CSS needs." #"\\s+")
1589755335275:(require 'clojure.string)
1589755374037:(doc clojure.string.replace)
1589755398967:(doc replace)
1589755455616:(:require [clojure.string :as cstr])
1589755641538:(doc split)
1589755652210:(doc clojure.string.split)
1589755684424:(clojure.string.split "one two three" #"\\s+")
1589755933717:(re-find #"^<.+:(.+):(.+)>" "<LINK:React:https://reactjs.org/>")
1589756040178:(re-find #"^<\\w+:(\\w+):(ht.+)>" "<LINK:React:https://reactjs.org/>")
1589756063334:(re-find #"^<\\w+:(\\w+):(h.+)>" "<LINK:React:https://reactjs.org/>")
1589756363940:(clojure.string.split "one two three" #"\\s+")
1589756374262:(str (clojure.string.split "one two three" #"\\s+"))
1589756619871:(reduce 'str (clojure.string.split "one two three" #"\\s+"))
1589756629857:(reduce str (clojure.string.split "one two three" #"\\s+"))
1589756685025:(apply str (clojure.string.split "one two three" #"\\s+"))
1589779492778:(re-find #"^<\\w+:(\\w+):(h.+)>" "<LINK:React:https://reactjs.org/>")
1589779512853:(re-find #"^<\\w+:(\\w+):(h.+)>" "one two three")
1589780047451:(doc conj)
1589780058339:(docs\n conj)
1589780068111:(doc conj)
1589781285704:(first [])
1589781441249:(rest [])
1589781454764:(nil? (rest []))
